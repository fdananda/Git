git config      Configurações do usuário: 
		git config --global user.name "fdananda" (Configura o nome do usuário)
		git config --global user.email "fdananda@hotmail.com" (Configura o e-mail do usuário)
git init    	Inicializa o git vazio ou reinicializa um já existe em um diretório local. Inicia a linha do tempo. Executa o comando dentro do diretório que será acompanhado.
  	    	git init
git status  	Verifica o status do respositório local.
	    	git status
git add     	Adiciona as alterações para fazer o commit. O git add * ou git add . adiciona todos os arquivos modificados.
		git add nome_do_arquivo 
            	git add *
		git add .
git commit  	Gera as versões. Adiciona um ponto na linha do tempo.
            	git commit -m "mensagem descrevendo o que foi alterado"
git remote  	Conecta com o git remoto.
	    	git remote add origin https://github.com/fdananda/Git.git
git push    	Envia a informação para o servidor. Na primeira vez, fazer o push com o comando git push -u origin master. Push - empurrar.
	    	git push
	    	git push -u origin master (para a primeira vez)
		git push origin nome_da_branch (para náo enviar para a branch master)
git pull    	Busca a informação do servidor. Pull - puxar.
            	git pull origin nome_da_branch
git clone   	Clona um repositório que está no servidor para o local.	
	    	git clone https://endereco-do-repositorio
git log 	Para verificar a lista de modificações feitas no projeto.
		git log
git show 	Mostra o que foi alterado em cada commit.
		git show numero_da_alteracao
git branch 	Para criar uma nova ramificação no projeto sem mexer na versão master.
		git branch nome_da_branch
git checkout 	Para mudar para a branch nova e/ou manipular versões.
		git checkout nome_da_branch
		git checkout -- nomedoarquivo (recupera um arquivo que foi apagado antes do commit)
		git checkout codigo_do_ponto_a_ser_recuperado -- nomedoarquivo  (recupera um arquivo que foi apagado depois do commit)
git branch  	Mostra todas as ramificações.
		git branch
git merge 	Adiciona ao master o que estava sendo desenvolvido na branch alternativa.
		git merge nome_da_branch
git branch - D 	Deletar a branch após o merge com o master.
		git branch -D nome_da_branch

Fluxo para trabalhar em um projeto já existente:
1. Clonar o projeto (clone);
2. Criar uma branch independente (branch);
3. Fazer o add e o commit na branch (add e commit);
4. Fazer o pull para buscar e trazer alterações do repositório remoto para o local (pull);
5. Fazer o push da branch para enviar as alterações do repositório local para o remoto (push);
6. Fazer o pull resquest para analisar o código da branch;
7. Caso as alterações sejam aprovadas, fazer o merge para que o código da branch vá para o master (merge).

Fluxo para criar um novo projeto:
1.Configurar usuário e e-mail (git config);
2. Inicializar o git (git init);    
3. Fazer o add e o commit na branch (add e commit);    
4. No site do Github, criar o repositório(Página inicial >> Repositories >> New >> Preencher o Repository Name >> Create repository >> Copiar Link do repositório criado;
5. Conectar com o git remoto (git remote);
6. Fazer o pull para buscar e trazer alterações do repositório remoto para o local (pull);
7. Fazer o push da branch para enviar as alterações do repositório local para o remoto (push);
8. Fazer o pull resquest para analisar o código da branch;
9. Caso as alterações sejam aprovadas, fazer o merge para que o código da branch vá para o master (merge).
   
